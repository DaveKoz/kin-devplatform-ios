//
// EcosystemAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class EcosystemAPI: APIBase {
    /**
     - parameter orderId: (path) The order id 
     - parameter X_REQUEST_ID: (header) A unique id for the request. A retransmitted request will have the same id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func cancelOrder(orderId: String, X_REQUEST_ID: String, completion: @escaping ((_ error: ErrorResponse?) -> Void)) {
        cancelOrderWithRequestBuilder(orderId: orderId, X_REQUEST_ID: X_REQUEST_ID).execute { (response, error) -> Void in
            completion(error)
        }
    }


    /**
     - DELETE /orders/{order_id}
     - cancel an order
     - API Key:
       - type: apiKey api_key 
       - name: ApiKeyAuth
     - parameter orderId: (path) The order id 
     - parameter X_REQUEST_ID: (header) A unique id for the request. A retransmitted request will have the same id 
     - returns: RequestBuilder<Void> 
     */
    open class func cancelOrderWithRequestBuilder(orderId: String, X_REQUEST_ID: String) -> RequestBuilder<Void> {
        var path = "/orders/{order_id}"
        let orderIdPreEscape = "\(orderId)"
        let orderIdPostEscape = orderIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{order_id}", with: orderIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "X-REQUEST-ID": X_REQUEST_ID
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**
     - parameter offerId: (path) The offer id 
     - parameter X_REQUEST_ID: (header) A unique id for the request. A retransmitted request will have the same id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createOrder(offerId: String, X_REQUEST_ID: String, completion: @escaping ((_ data: Order?, _ error: ErrorResponse?) -> Void)) {
        createOrderWithRequestBuilder(offerId: offerId, X_REQUEST_ID: X_REQUEST_ID).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /offers/{offer_id}/order
     - create an order for an offer
     - API Key:
       - type: apiKey api_key 
       - name: ApiKeyAuth
     - examples: [{contentType=application/json, example={
  "id" : "id",
  "recipient_address" : "recipient_address"
}}]
     - parameter offerId: (path) The offer id 
     - parameter X_REQUEST_ID: (header) A unique id for the request. A retransmitted request will have the same id 
     - returns: RequestBuilder<Order> 
     */
    open class func createOrderWithRequestBuilder(offerId: String, X_REQUEST_ID: String) -> RequestBuilder<Order> {
        var path = "/offers/{offer_id}/order"
        let offerIdPreEscape = "\(offerId)"
        let offerIdPostEscape = offerIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{offer_id}", with: offerIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "X-REQUEST-ID": X_REQUEST_ID
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Order>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**
     - parameter X_REQUEST_ID: (header) A unique id for the request. A retransmitted request will have the same id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getHistory(X_REQUEST_ID: String, completion: @escaping ((_ data: TransactionHistoryList?, _ error: ErrorResponse?) -> Void)) {
        getHistoryWithRequestBuilder(X_REQUEST_ID: X_REQUEST_ID).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /transactions
     - get user history

     - examples: [{contentType=application/json, example={
  "transactions" : [ {
    "order_id" : "order_id",
    "status" : "pending",
    "order" : {
      "order_id" : "order_id",
      "content" : "{}"
    }
  }, {
    "order_id" : "order_id",
    "status" : "pending",
    "order" : {
      "order_id" : "order_id",
      "content" : "{}"
    }
  } ]
}}]
     - parameter X_REQUEST_ID: (header) A unique id for the request. A retransmitted request will have the same id 
     - returns: RequestBuilder<TransactionHistoryList> 
     */
    open class func getHistoryWithRequestBuilder(X_REQUEST_ID: String) -> RequestBuilder<TransactionHistoryList> {
        let path = "/transactions"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "X-REQUEST-ID": X_REQUEST_ID
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<TransactionHistoryList>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**
     - parameter X_REQUEST_ID: (header) A unique id for the request. A retransmitted request will have the same id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getOffers(X_REQUEST_ID: String, completion: @escaping ((_ data: OfferList?, _ error: ErrorResponse?) -> Void)) {
        getOffersWithRequestBuilder(X_REQUEST_ID: X_REQUEST_ID).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /offers
     - Return a list of offers
     - API Key:
       - type: apiKey api_key 
       - name: ApiKeyAuth
     - examples: [{contentType=application/json, example={
  "offers" : [ {
    "image" : "image",
    "amount" : 6,
    "description" : "description",
    "id" : "id",
    "title" : "title",
    "limits" : {
      "expiration" : "expiration",
      "supply" : 0
    },
    "content" : "{}",
    "offer_type" : "earn"
  }, {
    "image" : "image",
    "amount" : 6,
    "description" : "description",
    "id" : "id",
    "title" : "title",
    "limits" : {
      "expiration" : "expiration",
      "supply" : 0
    },
    "content" : "{}",
    "offer_type" : "earn"
  } ]
}}]
     - parameter X_REQUEST_ID: (header) A unique id for the request. A retransmitted request will have the same id 
     - returns: RequestBuilder<OfferList> 
     */
    open class func getOffersWithRequestBuilder(X_REQUEST_ID: String) -> RequestBuilder<OfferList> {
        let path = "/offers"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "X-REQUEST-ID": X_REQUEST_ID
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<OfferList>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**
     - parameter orderId: (path) The order id 
     - parameter X_REQUEST_ID: (header) A unique id for the request. A retransmitted request will have the same id 
     - parameter body: (body) submission of an order 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func submitOrder(orderId: String, X_REQUEST_ID: String, body: Submission, completion: @escaping ((_ data: SubmissionResult?, _ error: ErrorResponse?) -> Void)) {
        submitOrderWithRequestBuilder(orderId: orderId, X_REQUEST_ID: X_REQUEST_ID, body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /orders/{order_id}
     - submit an order
     - API Key:
       - type: apiKey api_key 
       - name: ApiKeyAuth
     - examples: [{contentType=application/json, example={
  "order_id" : "order_id",
  "content" : "{}"
}}]
     - parameter orderId: (path) The order id 
     - parameter X_REQUEST_ID: (header) A unique id for the request. A retransmitted request will have the same id 
     - parameter body: (body) submission of an order 
     - returns: RequestBuilder<SubmissionResult> 
     */
    open class func submitOrderWithRequestBuilder(orderId: String, X_REQUEST_ID: String, body: Submission) -> RequestBuilder<SubmissionResult> {
        var path = "/orders/{order_id}"
        let orderIdPreEscape = "\(orderId)"
        let orderIdPostEscape = orderIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{order_id}", with: orderIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON()

        let url = NSURLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "X-REQUEST-ID": X_REQUEST_ID
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<SubmissionResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }

}
